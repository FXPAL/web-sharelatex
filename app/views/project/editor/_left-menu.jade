if (user.betaProgram === true || getReqQueryParam('ft') === 'tpr')
	// Left-hand menu entries
	span(ng-controller="ReferencesController")
		div(ng-if="thirdPartyReferencesEnabled")
			ul.list-unstyled.nav()
				//each item in ['mendeley','zotero']
				each item in ['mendeley']
					li
						a(ng-click="openReferencesModal('#{item}')")
							i.fa.fa-fw.fa-book
							| &nbsp;&nbsp; #{translate(item)}&nbsp;
							span.label.label-warning(style="padding-bottom: 2px;", tooltip="Beta Feature" tooltip-placement="right") β

	// Menedeley|Zotero References Modal
	script(type="text/ng-template", id="referencesModalTemplate")

		//each item in ['mendeley', 'zotero']
		each item in ['mendeley']
			div(ng-if="provider == '#{item}'")
				.modal-header
					button.close(
						type="button"
						data-dismiss="modal"
						ng-click="cancel()"
					) &times;
					h3
						| #{translate(item+"_integration")}&nbsp;
						span.label.label-warning(tooltip="Beta Feature" tooltip-placement="right") β
				.modal-body

					// When the user doesn't have this feature
					div(ng-if="!userHasProviderFeature")
						p.small #{translate(item+"_sync_description")}
						.alert.alert-info
							p #{translate(item+"_is_premium")}
							p
								a.btn.btn-info(ng-click="startFreeTrial(provider)") #{translate("start_free_trial")}

					// When the user does have access to this feature
					div(ng-if="userHasProviderFeature")

						// When the user has not linked to the provider
						div(ng-if="!userHasProviderLink")
							p #{translate(item+"_sync_description" )} 
							p
								a(href,ng-click="linkAccount()").btn.btn-info #{translate("link_to_"+item)}

						// When the user has linked, the happy path
						div(ng-if="userHasProviderLink")

							// error message
							.alert.alert-danger(ng-show="status.error")
								div(ng-show="status.errorType == 'default'")
									| #{translate(item+"_reference_loading_error")}

								div(ng-show="status.errorType == 'expired'")
									| #{translate(item+"_reference_loading_error_expired")}

								div(ng-show="status.errorType == 'forbidden'")
									| #{translate(item+"_reference_loading_error_forbidden")}

								div(ng-show="status.errorType == 'refresh-failed'")
									| #{translate(item+"_reference_loading_error_expired")}

							// token refresh failed, prompt to relink account
							div(ng-show="status.error && status.errorType == 'refresh-failed'")
								div()
									p #{translate(item+"_sync_description" )} 
									p
										a(href,ng-click="linkAccount()").btn.btn-info #{translate("link_to_"+item)}

							div(ng-show="status.error && status.errorType != 'refresh-failed' ")
								div
									div
										| #{translate("reference_error_relink_hint")} &nbsp;
									div
										a(href="/user/settings", target="_blank", style="font-weight: bold")
											| #{translate("account_settings")}

							.loading(ng-show="!status.error && status.loading")
								div.text-center
									i.fa.fa-refresh.fa-spin.fa-fw
									div #{translate(item+"_reference_loading")}

							.success(ng-show="bibtexData && !status.error && !status.loading")
								div.text-center
									i.fa.fa-check
									span
										| &nbsp;#{translate(item+"_reference_loading_success")}

							// data display, scroll and import button
							div(ng-if="bibtexData && !status.loading && !status.error", style="margin-top:15px;")
								div(style="max-height: 360px; overflow: scroll; white-space: pre")
									| {{bibtexData}}
								hr
								div.text-center
									button.btn.btn-success(ng-click="importBibtex()", ng-disabled="status.importing")
										span #{translate("reference_import_button")} {{provider}}.bib
										span(ng-if="status.done")
											| &nbsp;
											i.fa.fa-check


		.modal-footer()
			button.btn.btn-default(
				ng-click="cancel()",
			)
				span #{translate("close")}
