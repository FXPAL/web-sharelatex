// Generated by CoffeeScript 1.12.4
(function() {
  var MockOverleafApi, URL, chai, expect, request, settings;

  MockOverleafApi = require("./helpers/MockOverleafApi");

  URL = require("url");

  chai = require("chai");

  request = require("../../../../../test/acceptance/js/helpers/request");

  settings = require("settings-sharelatex");

  expect = chai.expect;

  describe("V2Templates", function() {
    return describe("/clone urls", function() {
      it("should redirect article", function(done) {
        return request({
          url: "/articles/redirect-article/clone"
        }, function(err, response, body) {
          var url;
          if (err != null) {
            return done(err);
          }
          expect(response.statusCode).to.equal(302);
          url = URL.parse(response.headers.location);
          expect(url.path).to.equal('/redirect');
          return done();
        });
      });
      it("should redirect example", function(done) {
        return request({
          url: "/latex/examples/redirect-article/clone"
        }, function(err, response, body) {
          var url;
          if (err != null) {
            return done(err);
          }
          expect(response.statusCode).to.equal(302);
          url = URL.parse(response.headers.location);
          expect(url.path).to.equal('/redirect');
          return done();
        });
      });
      return it("should redirect template", function(done) {
        return request({
          url: "/latex/templates/redirect-article/clone"
        }, function(err, response, body) {
          var url;
          if (err != null) {
            return done(err);
          }
          expect(response.statusCode).to.equal(302);
          url = URL.parse(response.headers.location);
          expect(url.path).to.equal('/redirect');
          return done();
        });
      });
    });
  });

}).call(this);
