div(ng-if="type == 'mendeley'", ng-controller="MendeleyLinkedFileModalController")
	// When the user doesn't have this feature
	div(ng-if="!userHasProviderFeature")
		p.small #{translate("mendeley_sync_description")}
		.alert.alert-info
			p #{translate("mendeley_is_premium")}
			p
				a.btn.btn-info(ng-click="startFreeTrial(provider)") #{translate("start_free_trial")}

	div(ng-if="userHasProviderFeature").referencesImportModal

		// When the user has not linked to the provider
		div(ng-if="!userHasProviderLink")
			p #{translate("mendeley_sync_description" )} 
			p
				a(href,ng-click="linkAccount()").btn.btn-info #{translate("link_to_mendeley")}

		// When the user has linked, the happy path
		div(ng-if="userHasProviderLink")


			// Forms, data and options
			div
				div(ng-if="state.fetchingGroups")
					h2.text-center
						small
							i.fa.fa-refresh.fa-spin.fa-fw
							|&nbsp;Loading...

				div(ng-if="!state.fetchingGroups")
					// Has groups available
					div(ng-if="hasGroups()")
						div.text-center
							h3 Import bibtex from your Mendeley Account or Group

						form(novalidate, name="newLinkedFileForm")
							.form-controls

								label(for="group-select") Select a Group (optional)
								select.form-control(
									name="group-select"
									ng-model="data.selectedGroupId"
								)
									option(value="" selected) - Select a Group (optional)
									option(
										ng-repeat="group in data.groups"
										value="{{ group.id }}"
									) {{ group.name }}

								br

								label(for="name") File name in this project
								input.form-control(
									type="text",
									placeholder="references.bib",
									required,
									ng-model="data.name",
									on-enter="create()",
									name="name"
								)
								.text-danger.row-spaced-small(ng-show="newDocForm.name.$error.validFile")

					// No groups available, from account directly
					div(ng-if="!hasGroups()")

						div.text-center
							h3 Import bibtex from your Mendeley account

						form(novalidate, name="newLinkedFileForm")
							.row-spaced.small
								label(for="name") File name in this project
								input.form-control(
									type="text",
									placeholder="references.bib",
									required,
									ng-model="data.name",
									on-enter="create()",
									name="name"
								)
								.text-danger.row-spaced-small(ng-show="newDocForm.name.$error.validFile")

					div(ng-if="state.inflight")
						h3.text-center
							small
								i.fa.fa-refresh.fa-spin.fa-fw
								|&nbsp;Importing...

			// error message
			div(ng-show="state.error").text-center
				hr
				.alert.alert-danger(ng-show="state.error")
					div(ng-show="state.errorType == 'default'")
						| #{translate("mendeley_reference_loading_error")}

					div(ng-show="state.errorType == 'expired'")
						| #{translate("mendeley_reference_loading_error_expired")}

					div(ng-show="state.errorType == 'forbidden'")
						| #{translate("mendeley_reference_loading_error_forbidden")}

					div(ng-show="state.errorType == 'refresh-failed'")
						| #{translate("mendeley_reference_loading_error_expired")}

				// token refresh failed, prompt to relink account
				div(ng-show="state.error && state.errorType == 'refresh-failed'")
					div()
						p #{translate("mendeley_sync_description" )} 
						p
							a(href,ng-click="linkAccount()").btn.btn-info #{translate("link_to_mendeley")}

				div(ng-show="state.error && state.errorType != 'refresh-failed' ")
					div
						div
							| #{translate("reference_error_relink_hint")} &nbsp;
						div
							a(href="/user/settings", target="_blank", style="font-weight: bold")
								| #{translate("account_settings")}
			// end of error messages
