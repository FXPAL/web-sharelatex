mixin providerPanel(providerKey, controller, providerName)
	div(ng-if="type == '" + providerKey + "'", ng-controller=controller)
		// When the user doesn't have this feature
		div(ng-if="!userHasProviderFeature")
			p.small #{translate(providerKey+"_sync_description")}
			.alert.alert-info
				p #{translate(providerKey+"_is_premium")}
				p
					a.btn.btn-info(ng-click="startFreeTrial(provider)") #{translate("start_free_trial")}

		div(ng-if="userHasProviderFeature").referencesImportModal

			// When the user has not linked to the provider
			div(ng-if="!userHasProviderLink")
				p #{translate(providerKey+"_sync_description" )} 
				p
					a(href,ng-click="linkAccount()").btn.btn-info #{translate("link_to_"+providerKey)}

			// When the user has linked, the happy path
			div(ng-if="userHasProviderLink")

				// Forms, data and options
				div
					div(ng-if="state.fetchingGroups")
						h2.text-center
							small
								i.fa.fa-refresh.fa-spin.fa-fw
								|&nbsp;Loading...

					div(ng-if="!state.fetchingGroups")
						p Import a bibtex file from your #{providerName} account

						form(novalidate, name="newLinkedFileForm")
							.row-spaced-small(ng-if="hasGroups()")
								label(for="group-select") Select a Group (optional)
								select.form-control(
									name="group-select"
									ng-model="data.selectedGroupId"
								)
									option(value="" selected) - Select a Group (optional)
									option(
										ng-repeat="group in data.groups"
										value="{{ group.id }}"
									) {{ group.name }}

							.row-spaced-small
								label(for="name") #{translate("file_name_in_this_project")}
								input.form-control(
									type="text",
									placeholder="references.bib",
									required,
									ng-model="data.name",
									on-enter="create()",
									name="name",
									focus-on="open"
								)

							if (providerKey == 'zotero')
								.row-spaced-small
									label(for="format") Format
									select.form-control(ng-model="data.format")
										option(value='bibtex') BibTeX
										option(value='biblatex') BibLaTeX

							.text-danger.row-spaced-small(ng-show="newDocForm.name.$error.validFile")

						div(ng-if="state.inflight")
							h3.text-center
								small
									i.fa.fa-refresh.fa-spin.fa-fw
									|&nbsp;Importing...

				// error message
				div(ng-show="state.error").text-center
					hr
					.alert.alert-danger(ng-show="state.error")
						div(ng-show="state.errorType == 'default'")
							| #{translate(providerKey+"_reference_loading_error")}

						div(ng-show="state.errorType == 'expired'")
							| #{translate(providerKey+"_reference_loading_error_expired")}

						div(ng-show="state.errorType == 'forbidden'")
							| #{translate(providerKey+"_reference_loading_error_forbidden")}

						div(ng-show="state.errorType == 'refresh-failed'")
							| #{translate(providerKey+"_reference_loading_error_expired")}

						div(ng-show="state.errorType == 'name-exists'")
							| #{translate("file_already_exists")}

					div(ng-show="state.errorType == 'refresh-failed'")
						// token refresh failed, prompt to relink account
						p #{translate(providerKey+"_sync_description" )} 
						p
							a(href,ng-click="linkAccount()").btn.btn-info #{translate("link_to_" + providerKey)}

					div(ng-show="state.errorType == 'default' || state.errorType == 'expired' || state.errorType == 'forbidden'")
						div
							| #{translate("reference_error_relink_hint")} &nbsp;
						div
							a(href="/user/settings", target="_blank", style="font-weight: bold")
								| #{translate("account_settings")}
				// end of error messages

+providerPanel('mendeley', 'MendeleyLinkedFileModalController', 'Mendeley')
+providerPanel('zotero', 'ZoteroLinkedFileModalController', 'Zotero')